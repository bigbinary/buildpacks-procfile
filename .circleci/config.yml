version: 2.1

executors:
  rust:
    docker:
      - image: cimg/rust:1.56
    working_directory: /mnt/ramdisk/project

commands:
  restore-cargo-cache:
    steps:
      - restore_cache:
          keys:
            # CIRCLE_JOB is the job name, eg 'lint', ensuring caches are job-specific.
            - cargo-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cargo.lock" }}-{{ checksum ".circleci/config.yml" }}
  save-cargo-cache:
    steps:
      - save_cache:
          key: cargo-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cargo.lock" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ~/.cargo

jobs:
  lint:
    executor: rust
    steps:
      - checkout
      - restore-cargo-cache
      - run:
          name: Clippy
          # Using --all-targets so tests are checked and --deny to fail on warnings.
          command: cargo clippy --all-targets --all-features --locked -- --deny warnings
      - run:
          name: rustfmt
          command: cargo fmt -- --check --verbose
      - save-cargo-cache

  build-and-test:
    executor: rust
    steps:
      - checkout
      - restore-cargo-cache
      - run:
          name: Build
          command: cargo build --all-features --locked
      - run:
          name: Run tests
          command: cargo test --all-features --locked
      - save-cargo-cache

workflows:
  ci:
    jobs:
      - lint
      - build-and-test
